name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    strategy:
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-musl
            packages: "gcc-aarch64-linux-gnu musl-tools"
          - arch: armv6
            target: arm-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: armv7
            target: armv7-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: x86_64
            target: x86_64-unknown-linux-musl
            packages: "musl-tools"
    runs-on: ubuntu-latest
    container: rust:latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          export DEBCONF_FRONTEND=noninteractive
          apt-get update
          apt-get upgrade --yes
          apt-get install --yes ${{ matrix.packages }}
          cargo build --bins --target ${{ matrix.target }} --release
          tar -cvJf spaceapi-dezentrale-client.tar.xz -C target/${{ matrix.target }}/release/ spaceapi-dezentrale-client
          tar -cvJf spaceapi-dezentrale-server.tar.xz -C target/${{ matrix.target }}/release/ spaceapi-dezentrale-server

      - name: Upload server release
        id: upload-release-client-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: spaceapi-dezentrale-client-${{ matrix.arch }}.tar.xz
          asset_name: spaceapi-dezentrale-client-${{ matrix.arch }}.tar.xz
          asset_content_type: application/x-executable

      - name: Upload client release
        id: upload-release-server-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: spaceapi-dezentrale-server-${{ matrix.arch }}.tar.xz
          asset_name: spaceapi-dezentrale-server-${{ matrix.arch }}.tar.xz
          asset_content_type: application/x-executable
