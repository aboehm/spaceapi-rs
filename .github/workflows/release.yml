name: Release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    strategy:
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-musl
            packages: "gcc-aarch64-linux-gnu musl-tools"
          - arch: armv6
            target: arm-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: armv7
            target: armv7-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: x86_64
            target: x86_64-unknown-linux-musl
            packages: "musl-tools"
    runs-on: ubuntu-latest
    container: rust:1.71-bookworm
    steps:
      - uses: actions/checkout@v2

      - name: Cargo build
        run: |
          export DEBCONF_FRONTEND=noninteractive
          apt-get update
          apt-get upgrade --yes
          apt-get install --yes ${{ matrix.packages }}
          cargo build --bins --target "${{ matrix.target }}" --release
          mv "target/${{ matrix.target }}/release/spaceapi-dezentrale-client" "spaceapi-dezentrale-client-${{ matrix.arch }}"
          mv "target/${{ matrix.target }}/release/spaceapi-dezentrale-server" "spaceapi-dezentrale-server-${{ matrix.arch }}"

      - uses: actions/upload-artifact@v3
        with:
          name: "spaceapi-dezentrale-${{ matrix.arch }}"
          path: |
            spaceapi-dezentrale-*-${{ matrix.arch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: spaceapi-dezentrale-aarch64

      - uses: actions/download-artifact@v3
        with:
          name: spaceapi-dezentrale-armv6

      - uses: actions/download-artifact@v3
        with:
          name: spaceapi-dezentrale-armv7

      - uses: actions/download-artifact@v3
        with:
          name: spaceapi-dezentrale-x86_64

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{ github.ref }}"
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: true
          file: |
            spaceapi-dezentrale-client-aarch64
            spaceapi-dezentrale-server-aarch64
            spaceapi-dezentrale-client-arm
            spaceapi-dezentrale-server-arm
            spaceapi-dezentrale-client-armv7
            spaceapi-dezentrale-server-armv7
            spaceapi-dezentrale-client-x86_64
            spaceapi-dezentrale-server-x86_64

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: spaceapi-dezentrale-client-x86_64
          asset_name: spaceapi-dezentrale-client-x86_64
          asset_content_type: application/x-executable
        
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: spaceapi-dezentrale-server-x86_64
          asset_name: spaceapi-dezentrale-server-x86_64
          asset_content_type: application/x-executable
