name: Release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true

  build:
    name: Build binaries
    needs: release
    strategy:
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-musl
            packages: "gcc-aarch64-linux-gnu musl-tools"
          - arch: armv6
            target: arm-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: armv7
            target: armv7-unknown-linux-musleabihf
            packages: "gcc-arm-linux-gnueabihf musl-tools"
          - arch: x86_64
            target: x86_64-unknown-linux-musl
            packages: "musl-tools"
    runs-on: ubuntu-latest
    container: rust:1.71-bookworm
    steps:
      - uses: actions/checkout@v2

      - name: Cargo build
        run: |
          #export DEBCONF_FRONTEND=noninteractive
          #apt-get update
          #apt-get upgrade --yes
          #apt-get install --yes ${{ matrix.packages }}
          #cargo build --bins --target "${{ matrix.target }}" --release
          #mv "target/${{ matrix.target }}/release/spaceapi-dezentrale-client" "spaceapi-dezentrale-client-${{ matrix.arch }}"
          #mv "target/${{ matrix.target }}/release/spaceapi-dezentrale-server" "spaceapi-dezentrale-server-${{ matrix.arch }}"
          mkdir -p "target/${{ matrix.target }}/release"
          date > "target/${{ matrix.target }}/release/spaceapi-dezentrale-client"
          date > "target/${{ matrix.target }}/release/spaceapi-dezentrale-server"

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ needs.create_release.outputs.upload_url }}"
          asset_name: "spaceapi-dezentrale-client-${{ matrix.arch }}"
          asset_path: "target/${{ matrix.target }}/release/spaceapi-dezentrale-client"
          asset_content_type: application/x-executable

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ needs.create_release.outputs.upload_url }}"
          asset_name: "spaceapi-dezentrale-server-${{ matrix.arch }}"
          asset_path: "target/${{ matrix.target }}/release/spaceapi-dezentrale-server"
          asset_content_type: application/x-executable
