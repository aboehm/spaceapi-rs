name: Release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Build
        runs-on: ubuntu-22.04
        container: rust:latest
        run: |
          export DEBCONF_FRONTEND=noninteractive
          apt-get update
          apt-get upgrade --yes
          apt-get install --yes \
            musl-tools \
            gcc-aarch64-linux-gnu \
            gcc-arm-linux-gnueabihf
          for arch in x86_64-unknown-linux-musl aarch64-unknown-linux-musl arm-unknown-linux-musleabihf armv7-unknown-linux-musleabihf ; do
            cargo build --bins --target "${arch}" --release
            tar -cvJf "spaceapi-dezentrale-client-${arch}.tar.xz" -C "target/${arch}/release/" spaceapi-dezentrale-client
            tar -cvJf "spaceapi-dezentrale-server-${arch}.tar.xz" -C "target/${arch}/release/" spaceapi-dezentrale-server
          done

      - name: Upload release binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for arch in x86_64-unknown-linux-musl aarch64-unknown-linux-musl arm-unknown-linux-musleabihf armv7-unknown-linux-musleabihf ; do
            hub release upload "${{ github.ref }}" \
              "spaceapi-dezentrale-client-${arch}.tar.xz" \
              "spaceapi-dezentrale-server-${arch}.tar.xz"
          done
